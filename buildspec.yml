# Based on https://github.com/PrakashTrove/AWS-CodeBuild-NetCore/blob/master/buildspec.yml
# AWS CodeBuild spec to build an Elastic Beanstalk artifact for AWS CodePipeline to deploy
version: 0.2
env:
  variables:
    Epi_PID: "PID"
    Epi_CKey: "key"
    Epi_Sec: "sec"
    AwsAccessKey: "awskey"
    AwsSecretAccessKey: "xyz"
    BucketName: "Bname"
    FileName: "Fname"    
    Build_Version: $CODEBUILD_BUILD_NUMBER    
phases:
  install:
    runtime-versions:
      dotnet: 5.0
    commands:
      - echo Install started on $CODEBUILD_BUILD_NUMBER  $Epi_PID `date`
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - apt-get update
      - add-apt-repository universe
      - apt-get install -y powershell
      - pwsh
      - pwsh -Command 'Install-Module -Name AWSPowerShell.NetCore -Confirm:$False -Force'
      - pwsh -Command 'Install-Module -Name EpiCloud -Confirm:$False -Force'
      #dotnet: latest - Latest resolve to 3.1, check this issue https://github.com/aws/aws-codebuild-docker-images/issues/414
   
  pre_build:
    commands:
      - echo Restore started on `date`
      - dotnet restore Alloy.csproj
      
  build:
    commands:
      - echo Build started on `date`
      - dotnet build -c Release Alloy.csproj
      - dotnet publish -c release Alloy.csproj -o ./publish_output
      - echo `pwd`
      - pwsh -command '$pathToJson = "./publish_output/appsettings.json";  $a = Get-Content $pathToJson | ConvertFrom-Json; $a.DreesSettings.AwsAccessKey=$Env:AwsAccessKey; $a.DreesSettings.AwsSecretAccessKey=$Env:AwsSecretAccessKey; $a | ConvertTo-Json | set-content $pathToJson'
      - zip -r ./kiosk-$Build_Version.nupkg ./publish_output
      - echo `ls ./publish_output`
      
artifacts:
  files:
    - ./publish_output/**/* 